#!/usr/bin/python

import sys
import os
import errno

def inodes_of(root, paths):
    for path in paths:
        try:
            yield (path, os.stat(os.path.join(root, path)).st_ino)
        except OSError as e:
            if e.errno != errno.ENOENT:
                print(str(e))

def find_inodes(root, inodes):
    for root, dirs, files in os.walk(root):

        for (path,ino) in inodes_of(root, dirs):
            if ino in inodes:
                print(os.path.join(root, path), ino)
        for (path,ino) in inodes_of(root, files):
            if ino in inodes:
                print(os.path.join(root, path), ino)

def main(args = None):
    if args is None:
        args = sys.argv

    if len(args) <= 2:
        print("Usage: find_inodes <dir> [inode1] [inode2] ...")
        return 1

    root_dir = args[1]
    inodes = map(int, args[2:])

    print("Searching %s for inodes %s" % (root_dir, ",".join(map(str, inodes))))

    find_inodes(root_dir, inodes)

if __name__ == '__main__':
    sys.exit(main())
